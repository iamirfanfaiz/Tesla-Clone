{"version":3,"sources":["logo.svg","features/counter/counterAPI.js","features/counter/counterSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js","features/counter/Counter.module.css"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","Header","useState","burgerStatus","setBurgerStatus","Container","href","xmlns","height","width","viewBox","d","Menu","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","styled","div","props","Section","title","des","backgroundImg","leftBtnText","rightBtnText","Wrap","bgImage","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","src","img","Home","App","className","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4adb0f45.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction Header() {\n\n    const [\n        burgerStatus,\n        setBurgerStatus\n    ] = useState(false);\n\n    return (\n        <Container>\n            <a href=\"\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"40\" width=\"150\" viewBox=\"-41.8008 -9.08425 362.2736 54.5055\"><path d=\"M238.077 14.382v21.912h7.027V21.705h25.575v14.589h7.022V14.42l-39.624-.038m6.244-7.088h27.02c3.753-.746 6.544-4.058 7.331-7.262h-41.681c.779 3.205 3.611 6.516 7.33 7.262m-27.526 29.014c3.543-1.502 5.449-4.1 6.179-7.14h-31.517l.02-29.118-7.065.02v36.238h32.383M131.874 7.196h24.954c3.762-1.093 6.921-3.959 7.691-7.136h-39.64v21.415h32.444v7.515l-25.449.02c-3.988 1.112-7.37 3.79-9.057 7.327l2.062-.038h39.415V14.355h-32.42V7.196m-61.603.069h27.011c3.758-.749 6.551-4.058 7.334-7.265H62.937c.778 3.207 3.612 6.516 7.334 7.265m0 14.322h27.011c3.758-.741 6.551-4.053 7.334-7.262H62.937c.778 3.21 3.612 6.521 7.334 7.262m0 14.717h27.011c3.758-.747 6.551-4.058 7.334-7.263H62.937c.778 3.206 3.612 6.516 7.334 7.263M0 .088c.812 3.167 3.554 6.404 7.316 7.215h11.37l.58.229v28.691h7.1V7.532l.645-.229h11.38c3.804-.98 6.487-4.048 7.285-7.215v-.07H0v.07\"/></svg>\n            </a>\n            <Menu>\n\n                <a href=\"\">\n                    Model S\n                </a>\n                <a href=\"\">\n                    Model 3\n                </a>\n                <a href=\"\">\n                    Model X\n                </a>\n                <a href=\"\">\n                    Model Y\n                </a>\n\n            </Menu>\n\n            <RightMenu>\n                <a href=\"#\">\n                    Shop\n                </a>\n                <a href=\"#\">\n                    Tesla Account\n                </a>\n                <CustomMenu onClick={() => setBurgerStatus(true)}>\n                    Menu\n                </CustomMenu>\n             \n            </RightMenu>\n           \n\n            <BurgerNav show={burgerStatus}>\n                <CloseWrapper onClick={() => setBurgerStatus(false)}>\n                    <CloseIcon/>\n                </CloseWrapper>\n                <li><a href=\"\">Exsiting Inventory</a></li>\n                <li><a href=\"\">Used Inventory</a></li>\n                <li><a href=\"\">Trade In</a></li>\n                <li><a href=\"\">Cyber Truck</a></li>\n                <li><a href=\"\">Roadaster</a></li>\n                <li><a href=\"\">Semi</a></li>\n                <li><a href=\"\">Charging</a></li>\n                <li><a href=\"\">Powerwall</a></li>\n                <li><a href=\"\">Commercial Energy</a></li>\n                <li><a href=\"\">Utilities</a></li>\n                <li><a href=\"\">Find Us</a></li>\n                <li><a href=\"\">Support</a></li>\n                <li><a href=\"\">Investors Relations</a></li>\n                <li><a href=\"\">United States <br/> <small>English</small></a></li>\n\n            </BurgerNav>\n        </Container>\n    )\n}\n\nexport default Header\n\nconst Container = styled.div`\nmin-height:60px;\ndisplay:flex;\njustify-content:space-between;\nalign-items:center;\n    padding: 10px 40px 10px 20px;\nposition:fixed;\nwidth:100%;\nz-index:1;\n`\n\nconst Menu = styled.div`\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex: 1;\na{\n    font-weight:400;\n    padding: 0 10px;\n    font-size:16px;\n}\n`\n\nconst RightMenu = styled.div`\ndisplay:flex;\nalign-items:center;\na{\n    font-weight:400;\n    padding: 0 10px;\n    font-size:16px;\n}\n\n\n`\n\nconst CloseWrapper = styled.div`\ncursor:pointer;\ndisplay: flex;\njustify-content: flex-end;\n`\nconst CustomMenu = styled.div`\ncursor:pointer;\nmargin-left:10px;\n`\n\nconst BurgerNav = styled.div`\nposition:fixed;\ntop:0;\nbottom:0;\nright:0;\nbackground: white;\nwidth:300px;\nz-index-16;\nlist-style:none;\npadding: 30px 36px;\ndisplay:flex;\nflex-direction:column;\ntext-align: start;\ntransform: ${props => props.show ? `translateX(0)` : `translateX(100%)`};\ntransition: transform 0.2s;\n\nli{\n    padding: 15px 0;\n    font-size:14px;\n}\n`\n\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport Fade from 'react-reveal/Fade';\n\n\nfunction Section( {title, des, backgroundImg, leftBtnText, rightBtnText} ) {\n    return (\n        <Wrap bgImage={backgroundImg}>\n            <Fade bottom>\n            <ItemText>\n                <h1>{title}</h1>\n                <p>{des}</p>\n            </ItemText>\n            </Fade>\n           <Buttons>\n           <Fade bottom>\n            <ButtonGroup>\n                <LeftButton>\n                    {leftBtnText}\n                </LeftButton>\n                {\n                    rightBtnText && \n                    <RightButton>\n                    {rightBtnText}\n                    </RightButton>\n                }\n               \n            </ButtonGroup>\n            </Fade>\n            <DownArrow src=\"/images/down-arrow.svg\"></DownArrow>\n           </Buttons>\n        </Wrap>\n    )\n}\n\nexport default Section\n\nconst Wrap = styled.div`\nwidth:100vw;\nheight:100vh;\nbackground-image:url('/images/model-s.jpg');\nbackground-size:cover;\nbackground-position:center;\nbackground-repeat:no-repeat;\ndisplay:flex;\njustify-content:space-between;\nflex-direction:column;\nbackground-image: ${props => `url(\"./images/${props.bgImage}\")`};\n\n`\n\nconst ItemText = styled.div`\npadding-top: 15vh;\ntext-align: center;\nflex:1;\n`\n\nconst ButtonGroup = styled.div`\ndisplay:flex;\njustify-content:center;\n\n\n`\n\nconst LeftButton = styled.div`\nbackground-color: black;\nheight:40px;\nwidth:256px;\ncolor:white;\ndisplay:flex;\njustify-content:center;\nalign-items:center;\nborder-radius: 100px;\nopacity:0.86;\ntext-transform: Uppercase;\nfontsize:12px;\nmargin: 15px;\n`\n\nconst RightButton = styled(LeftButton)`\nbackground:white;\ncolor:#000;\nopacity:0.65;\n`\n\nconst DownArrow = styled.img`\nmargin-top:20px;\nheight: 40px;\nanimation: animationDown infinite 1.5s;\noverflow:hidden;\n`\n\nconst Buttons = styled.div`\n\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport Header from './Header'\nimport Section from './Section'\n\nfunction Home() {\n    return (\n        <Container>\n            <Header/>\n            <Section title=\"Model S\" des=\"Order Online for Touchless Delivery\" backgroundImg=\"model-s.jpg\" leftBtnText=\"Custom Order\" rightBtnText=\"Exsiting Inventory\" />\n            <Section title=\"Model Y\" des=\"Order Online for Touchless Delivery\" backgroundImg=\"model-y.jpg\" leftBtnText=\"Custom Order\" rightBtnText=\"Exsiting Inventory\" />\n            <Section title=\"Model 3\" des=\"Order Online for Touchless Delivery\" backgroundImg=\"model-3.jpg\" leftBtnText=\"Custom Order\" rightBtnText=\"Exsiting Inventory\" />\n            <Section title=\"Model X\" des=\"Order Online for Touchless Delivery\" backgroundImg=\"model-x.jpg\" leftBtnText=\"Custom Order\" rightBtnText=\"Exsiting Inventory\" />\n            <Section title=\"Lowest Cost Solar Panels in America\" des=\"Money back Gurantee\" backgroundImg=\"solar-panel.jpg\" leftBtnText=\"Order Now\" rightBtnText=\"Learn More\" />\n            <Section title=\"Solar for New Roofs\" des=\"Solar Roof Costs Less Than a New Roof\" backgroundImg=\"solar-roof.jpg\" leftBtnText=\"Order Now\" rightBtnText=\"Learn More\" />\n            <Section title=\"Accessories\" backgroundImg=\"accessories.jpg\" leftBtnText=\"Order Now\" />\n        \n        </Container>\n    )\n}\n\nexport default Home\n\nconst Container = styled.div`\nheight:100vh;\n`\n","import React from 'react';\nimport logo from './logo.svg';\nimport { Counter } from './features/counter/Counter';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Header /> */}\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};"],"sourceRoot":""}